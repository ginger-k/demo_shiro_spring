<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <!-- 会话ID生成器 -->
    <!-- <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/> -->
    
    <!-- 会话DAO -->
   <!--  <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean> -->

    <!-- 会话Cookie模板 -->
    <!-- <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="180000"/>
    </bean> -->

    <!-- 会话管理器 -->
	<!-- 
		DefaultSessionManager：DefaultSecurityManager使用的默认实现，用于JavaSE 环境
		ServletContainerSessionManager：DefaultWebSecurityManager使用的默认实现，用于Web环境，其直接使用Servlet 容器的会话
		DefaultWebSessionManager： 用于Web 环境的实现，可以替代ServletContainerSessionManager，自己维护着会话，直接废弃了Servlet容器的会话管理。 
	-->
    <!-- <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> 
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean> -->
    
    <!-- 自定义Realm -->
	<bean id="userRealm" class="com.shiro.spring.realm.UserRealm"/> 

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
     <!--   <property name="sessionManager" ref="sessionManager"/>
         <property name="cacheManager" ref="cacheManager"/> -->
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>


	<!-- org.apache.shiro.web.filter.mgt.DefaultFilter -->
 	<!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/><!-- 默认 -->
        <property name="passwordParam" value="password"/><!-- 默认 -->
        <property name="failureKeyAttribute" value="shiroLoginFailure"/> <!-- 默认 -->
    </bean>
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/logoutSuccess.jsp"/>
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/formLogin.do"/> <!-- 也可以在FormAuthenticationFilter中配置 -->
        <property name="successUrl" value="/manageIndex.do"/> <!-- 也可以在FormAuthenticationFilter中配置 -->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /*.jsp = anon
                /formLogin.do = authc
                /logout.do = logout
                /admin/*.do = roles[admin]
            	<!-- 多个角色，默认是且，可用重写RolesAuthorizationFilter -->
                /student/*.do = roles[student]
                /teacher/manage.do = perms["teacher:manage"]
                /teacher/insert.do = perms["teacher:insert"]
                /teacher/update.do = perms["teacher:update"]
                /teacher/delete.do = perms["teacher:delete"]
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>